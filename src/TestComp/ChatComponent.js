import React from 'react';
import { makeStyles } from '@material-ui/core/styles';
import AppBar from '@material-ui/core/AppBar';
import CssBaseline from '@material-ui/core/CssBaseline';
import Toolbar from '@material-ui/core/Toolbar';
import Paper from '@material-ui/core/Paper';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemAvatar from '@material-ui/core/ListItemAvatar';
import ListItemText from '@material-ui/core/ListItemText';
import Avatar from '@material-ui/core/Avatar';
import TextField from '@material-ui/core/TextField';
import Button from '@material-ui/core/Button';
import SendIcon from '@material-ui/icons/Send';

const messages = [
  {
    id: 1,
    primary: 'Brunch this week?',
    secondary: "I'll be in the neighbourhood this week. Let's grab a bite to eat",
    person: '/static/images/avatar/5.jpg',
  },
  {
    id: 2,
    primary: 'Birthday Gift',
    secondary: `Do you have a suggestion for a good present for John on his work
      anniversary. I am really confused & would love your thoughts on it.`,
    person: '/static/images/avatar/1.jpg',
  },
  {
    id: 3,
    primary: 'Recipe to try',
    secondary: 'I am try out this new BBQ recipe, I think this might be amazing',
    person: '/static/images/avatar/2.jpg',
  },
  {
    id: 4,
    primary: 'Yes!',
    secondary: 'I have the tickets to the ReactConf for this year.',
    person: '/static/images/avatar/3.jpg',
  },
  {
    id: 5,
    primary: "Doctor's Appointment",
    secondary: 'My appointment for the doctor was rescheduled for next Saturday.',
    person: '/static/images/avatar/4.jpg',
  },
  {
    id: 6,
    primary: 'Discussion',
    secondary: `Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.`,
    person: '/static/images/avatar/5.jpg',
  },
  {
    id: 7,
    primary: 'Summer BBQ',
    secondary: `Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.`,
    person: '/static/images/avatar/1.jpg',
    },
    {
        id: 7,
        primary: 'Summer BBQ',
        secondary: `Who wants to have a cookout this weekend? I just got some furniture
          for my backyard and would love to fire up the grill.`,
        person: '/static/images/avatar/1.jpg',
    },
    {
        id: 7,
        primary: 'Summer BBQ',
        secondary: `Who wants to have a cookout this weekend? I just got some furniture
          for my backyard and would love to fire up the grill.`,
        person: '/static/images/avatar/1.jpg',
      },
];


const useStyles = makeStyles((theme) => ({
  text: {
    padding: theme.spacing(2, 2, 0),
  },
  paperchat: {
    paddingBottom: 50,
  },
  listchat: {
    marginBottom: theme.spacing(2),
  },
  subheaderchat: {
    backgroundColor: theme.palette.background.paper,
  },
  appbarchat: {
    top: 'auto',
    bottom: 0,
    width: 'calc(100% - 58vh)',
    backgroundColor: theme.palette.background.paper,
  },
  forminputchat: {
    margin: '0 auto',
    width: '100%',
  },
  inputchat: {
    width: '90%',
  },
  buttonchat: {
    height: '45px',
    width: '75px',
    left: '20px'
  }
}));

const ChatComponent = (props) => {
  const classes = useStyles();
  console.log(props);
  return (
    <React.Fragment>
      <CssBaseline />
      <Paper square className={classes.paperchat}>
        <List className={classes.listchat}>
          {props.statMessageArray.map(({ id, autor, avatar, text }) => (
            <React.Fragment key={id}>
              <ListItem className={classes.primaryMessage}>
                <ListItemAvatar>
                  <Avatar alt="Profile Picture" src={avatar} />
                </ListItemAvatar>
                <ListItemText primary={autor} secondary={text} />
              </ListItem>
            </React.Fragment>
          ))}
        </List>
          </Paper>
      <AppBar position="fixed" className={classes.appbarchat}>
        <Toolbar>
          <TextField
              className={classes.inputchat}
              label='Введите сообщение'
              inputRef={input => input && input.focus()}
              value={props.value}
              onChange={(e) => props.funcSetInputMessage(e.target.value)}
              onKeyDown={({ key }) => {
                if (key === 'Enter') { props.funcOnSendMessage() };
              }}
            />
        <Button
          color="primary"
          variant="contained"
          className={classes.buttonchat}
              edge="end"
              onClick={props.funcOnSendMessage}
        >
          <SendIcon />
        </Button>
        </Toolbar>
          </AppBar>
    </React.Fragment>
  );
}

export default ChatComponent;